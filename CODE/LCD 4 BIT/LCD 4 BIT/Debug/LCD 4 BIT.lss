
LCD 4 BIT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000001a4  00000218  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000024c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005a7  00000000  00000000  000002d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001f6  00000000  00000000  0000087f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000030d  00000000  00000000  00000a75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  00000d84  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001f3  00000000  00000000  00000e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001cf  00000000  00000000  00001013  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000011e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ea       	ldi	r30, 0xA4	; 164
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 bd 00 	call	0x17a	; 0x17a <main>
  7a:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_Command>:
}

void LCD_Clear()
{
	LCD_Command (0x01);					/* clear display */
	LCD_Command (0x80);					/* cursor at home position */
  82:	ae 98       	cbi	0x15, 6	; 21
  84:	af 9a       	sbi	0x15, 7	; 21
  86:	9b b3       	in	r25, 0x1b	; 27
  88:	28 2f       	mov	r18, r24
  8a:	20 7f       	andi	r18, 0xF0	; 240
  8c:	9f 70       	andi	r25, 0x0F	; 15
  8e:	92 2b       	or	r25, r18
  90:	9b bb       	out	0x1b, r25	; 27
  92:	00 c0       	rjmp	.+0      	; 0x94 <LCD_Command+0x12>
  94:	00 c0       	rjmp	.+0      	; 0x96 <LCD_Command+0x14>
  96:	00 00       	nop
  98:	af 98       	cbi	0x15, 7	; 21
  9a:	e9 ef       	ldi	r30, 0xF9	; 249
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	31 97       	sbiw	r30, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <LCD_Command+0x1c>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <LCD_Command+0x22>
  a4:	00 00       	nop
  a6:	af 9a       	sbi	0x15, 7	; 21
  a8:	2b b3       	in	r18, 0x1b	; 27
  aa:	f0 e1       	ldi	r31, 0x10	; 16
  ac:	8f 9f       	mul	r24, r31
  ae:	c0 01       	movw	r24, r0
  b0:	11 24       	eor	r1, r1
  b2:	92 2f       	mov	r25, r18
  b4:	9f 70       	andi	r25, 0x0F	; 15
  b6:	89 2b       	or	r24, r25
  b8:	8b bb       	out	0x1b, r24	; 27
  ba:	00 c0       	rjmp	.+0      	; 0xbc <LCD_Command+0x3a>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <LCD_Command+0x3c>
  be:	00 00       	nop
  c0:	af 98       	cbi	0x15, 7	; 21
  c2:	89 ef       	ldi	r24, 0xF9	; 249
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <LCD_Command+0x44>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <LCD_Command+0x4a>
  cc:	00 00       	nop
  ce:	08 95       	ret

000000d0 <LCD_Char>:
  d0:	ae 9a       	sbi	0x15, 6	; 21
  d2:	af 9a       	sbi	0x15, 7	; 21
  d4:	9b b3       	in	r25, 0x1b	; 27
  d6:	28 2f       	mov	r18, r24
  d8:	20 7f       	andi	r18, 0xF0	; 240
  da:	9f 70       	andi	r25, 0x0F	; 15
  dc:	92 2b       	or	r25, r18
  de:	9b bb       	out	0x1b, r25	; 27
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_Char+0x12>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_Char+0x14>
  e4:	00 00       	nop
  e6:	af 98       	cbi	0x15, 7	; 21
  e8:	e9 ef       	ldi	r30, 0xF9	; 249
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	31 97       	sbiw	r30, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <LCD_Char+0x1c>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <LCD_Char+0x22>
  f2:	00 00       	nop
  f4:	af 9a       	sbi	0x15, 7	; 21
  f6:	2b b3       	in	r18, 0x1b	; 27
  f8:	f0 e1       	ldi	r31, 0x10	; 16
  fa:	8f 9f       	mul	r24, r31
  fc:	c0 01       	movw	r24, r0
  fe:	11 24       	eor	r1, r1
 100:	92 2f       	mov	r25, r18
 102:	9f 70       	andi	r25, 0x0F	; 15
 104:	89 2b       	or	r24, r25
 106:	8b bb       	out	0x1b, r24	; 27
 108:	00 c0       	rjmp	.+0      	; 0x10a <LCD_Char+0x3a>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_Char+0x3c>
 10c:	00 00       	nop
 10e:	af 98       	cbi	0x15, 7	; 21
 110:	89 ef       	ldi	r24, 0xF9	; 249
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <LCD_Char+0x44>
 118:	00 c0       	rjmp	.+0      	; 0x11a <LCD_Char+0x4a>
 11a:	00 00       	nop
 11c:	08 95       	ret

0000011e <LCD_String>:
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	ec 01       	movw	r28, r24
 124:	88 81       	ld	r24, Y
 126:	88 23       	and	r24, r24
 128:	31 f0       	breq	.+12     	; 0x136 <LCD_String+0x18>
 12a:	21 96       	adiw	r28, 0x01	; 1
 12c:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_Char>
 130:	89 91       	ld	r24, Y+
 132:	81 11       	cpse	r24, r1
 134:	fb cf       	rjmp	.-10     	; 0x12c <LCD_String+0xe>
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	08 95       	ret

0000013c <LCD_Init>:
}

void LCD_Init (void)					/* LCD Initialize function */
{
	LCD_Command_Dir |= (1<<PINC6);		/* Make LCD command port direction as o/p */
 13c:	a6 9a       	sbi	0x14, 6	; 20
	LCD_Command_Dir |= (1<<PINC7);		/* Make LCD command port direction as o/p */
 13e:	a7 9a       	sbi	0x14, 7	; 20

	LCD_Data_Dir |= (1<<PINA4);			/* Make LCD data port direction as o/p */
 140:	d4 9a       	sbi	0x1a, 4	; 26
	LCD_Data_Dir |= (1<<PINA5);			/* Make LCD data port direction as o/p */
 142:	d5 9a       	sbi	0x1a, 5	; 26
	LCD_Data_Dir |= (1<<PINA6);			/* Make LCD data port direction as o/p */
 144:	d6 9a       	sbi	0x1a, 6	; 26
	LCD_Data_Dir |= (1<<PINA7);			/* Make LCD data port direction as o/p */
 146:	d7 9a       	sbi	0x1a, 7	; 26
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 148:	87 e8       	ldi	r24, 0x87	; 135
 14a:	93 e1       	ldi	r25, 0x13	; 19
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <LCD_Init+0x10>
 150:	00 c0       	rjmp	.+0      	; 0x152 <LCD_Init+0x16>
 152:	00 00       	nop

	_delay_ms(20);						/* LCD Power ON delay always >15ms */

	LCD_Command (0x02);					/* send for 4 bit initialization of LCD  */
 154:	82 e0       	ldi	r24, 0x02	; 2
 156:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	LCD_Command (0x28);					/* 2 line, 5*7 matrix in 4-bit mode */
 15a:	88 e2       	ldi	r24, 0x28	; 40
 15c:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	LCD_Command (0x0C);					/* Display ON Cursor OFF */
 160:	8c e0       	ldi	r24, 0x0C	; 12
 162:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	LCD_Command (0x06);					/* Auto Increment cursor */
 166:	86 e0       	ldi	r24, 0x06	; 6
 168:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	LCD_Command (0x01);					/* Clear display */
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	LCD_Command (0x80);					/* Cursor at home position */
 172:	80 e8       	ldi	r24, 0x80	; 128
 174:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 178:	08 95       	ret

0000017a <main>:
#include <util/delay.h>					/* Include inbuilt defined Delay header file */
#include "lcd_4_bit.h"
 
int main()
{
	LCD_Init();							/* Initialize LCD */
 17a:	0e 94 9e 00 	call	0x13c	; 0x13c <LCD_Init>
}

void lcd_cursor(unsigned char row,unsigned char col)
{
	if(row==1)
	LCD_Command(0X80+col);
 17e:	80 e8       	ldi	r24, 0x80	; 128
 180:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>

	while (1)
	{
		lcd_cursor(1,0);				/* Go to 1st line*/
		LCD_String("VAS");				/* write string on 1st line of LCD*/
 184:	80 e6       	ldi	r24, 0x60	; 96
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_String>
		LCD_Command (0x1C);
 18c:	8c e1       	ldi	r24, 0x1C	; 28
 18e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 192:	87 ea       	ldi	r24, 0xA7	; 167
 194:	91 e6       	ldi	r25, 0x61	; 97
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <main+0x1c>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x22>
 19c:	00 00       	nop
 19e:	ef cf       	rjmp	.-34     	; 0x17e <main+0x4>

000001a0 <_exit>:
 1a0:	f8 94       	cli

000001a2 <__stop_program>:
 1a2:	ff cf       	rjmp	.-2      	; 0x1a2 <__stop_program>
